# Default config for sway
# Read `man 5 sway` for a complete reference.

## Variables
### Logo key. Use Mod1 for Alt.
set $mod Mod4
### Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
### Your preferred terminal emulator
set $term alacritty
### Your preferred application launcher
### Note: pass the final command to swaymsg so that the resulting window can be opened
### on the original workspace that the command was run on.
###set $menu dmenu_path | dmenu -fn "MensloLSG Normal 13" | xargs swaymsg exec --
set $menu dmenu_path | wofi --show drun -i | xargs swaymsg exec --
set $command dmenu_path | wofi --show dmenu -i | xargs swaymsg exec --

## Output configuration
### Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/backgrounds/f32/default/f32.png fill
### You can get the names of your outputs by running: swaymsg -t get_outputs
output DP-1 resolution 3440x1440 position 3440,0

## Idle configuration
### This will lock your screen after 300 seconds of inactivity, then turn off
### your displays after another 300 seconds, and turn your screens back on when
### resumed. It will also lock your screen before your computer goes to sleep.
exec swayidle -w \
         timeout 300 'swaylock -f -c 000000' \
         timeout 600 'systemctl suspend' \
         before-sleep 'swaylock -f -c 000000'
         # Restore lines below when wlroot 1.5 is released
         #timeout 600 'swaymsg "output * dpms off"' \
         #timeout 1800 'systemctl suspend' \
         #     resume 'swaymsg "output * dpms on"' \

### Set transparency
set $opacity 0.9
for_window [class=".*"] opacity $opacity
for_window [app_id=".*"] opacity $opacity

## Input configuration
### Add keyboard layout
  input * xkb_layout "gb,it,se"
### Enable numlock
  input * xkb_numlock enable

### Example configuration:
###
###   input "2:14:SynPS/2_Synaptics_TouchPad" {
###       dwt enabled
###       tap enabled
###       natural_scroll enabled
###       middle_emulation enabled
###   }

### You can get the names of your inputs by running: swaymsg -t get_inputs
### Read `man 5 sway-input` for more information about this section.

## Key bindings
### Basics:

    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Start your command launcher
    bindsym $mod+z exec $command

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file (N.B: added a workaround to avoid issues in *vi* editors
    bindsym $mod+Shift+c nop
    bindsym --release $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'

    # Dismiss first notification
    bindsym $mod+n exec makoctl dismiss
    
    # Restore notifications (not active yet, needs new mako)
    bindsym $mod+period exec makoctl restore

    # Dismiss all notifications
    bindsym $mod+Shift+n exec makoctl dismiss -a

    # Dimiss all notifications (need to understand better)
    bindsym $mod+Ctrl+n exec makoctl menu wofi -d -p 'Choose Action: '

### Moving around:

    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

### Workspaces:

    # Switch to workspace
    bindsym $mod+1 workspace 1
    bindsym $mod+2 workspace 2
    bindsym $mod+3 workspace 3
    bindsym $mod+4 workspace 4
    bindsym $mod+5 workspace 5
    bindsym $mod+6 workspace 6
    bindsym $mod+7 workspace 7
    bindsym $mod+8 workspace 8
    bindsym $mod+9 workspace 9
    bindsym $mod+0 workspace 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace 1
    bindsym $mod+Shift+2 move container to workspace 2
    bindsym $mod+Shift+3 move container to workspace 3
    bindsym $mod+Shift+4 move container to workspace 4
    bindsym $mod+Shift+5 move container to workspace 5
    bindsym $mod+Shift+6 move container to workspace 6
    bindsym $mod+Shift+7 move container to workspace 7
    bindsym $mod+Shift+8 move container to workspace 8
    bindsym $mod+Shift+9 move container to workspace 9
    bindsym $mod+Shift+0 move container to workspace 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

### Layout stuff:

    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

    # Move focus to child
    bindsym $mod+q focus child

### Scratchpad:

    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

### Resizing containers:

mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

### Screenshot
bindsym --release Print exec grim -g \"$(slurp)" - | wl-copy

### Lock Screen
bindsym $mod+Mod1+l exec 'swaylock -f -c 000000'

### Special Keys
bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
#bindsym XF86AudioPlay exec playerctl play-pause
#bindsym XF86AudioNext exec playerctl next
#bindsym XF86AudioPrev exec playerctl previous

## Status Bar:
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top
        font pango:DejaVu Sans Mono, MensloLSG 12
        status_command i3status-rs ~/.config/i3status-rs/status.toml
    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    #status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1;
    colors {
        background #323232
        inactive_workspace #32323200 #32323200 #5c5c5c
    }
}

### Waybar Test
#bar {
#    swaybar_command waybar
#}

## Autostart Applications
### Polkit (to elevate user rights in GUI apps)
exec /usr/bin/lxpolkit

### Foreground Applications
exec mako
exec swaymsg "workspace 1; exec alacritty --title MainTerminal"

### Background Applications
exec "flatpak run org.nextcloud.Nextcloud --background"
exec "flatpak run im.riot.Riot"
exec "ckb-next --background --close"
exec "solaar -w hide"

### Floating Windows
for_window [title="^Element"] floating enable
for_window [app_id="desktopclient.nextcloud.com.nextcloud"] floating enable
for_window [class="Steam"] floating enable
for_window [class="ckb-next"] floating enable
for_window [app_id="gnome-disks"] floating enable
for_window [app_id="pavucontrol"] floating enable
for_window [app_id="imv"] floating enable
for_window [app_id="solaar"] floating enable

### Automatic Window Placement
assign [title="^Element"] workspace 2

### Automatic Window Layout
for_window [app_id="firefox"] layout tabbed 
for_window [class="firefox"] layout tabbed 

## Gaps
smart_gaps on
gaps inner 10

## Import DISPLAY variable to systemd/dbus env - needed to fix Flatpak app issues with Firefox not opening up when links are being clicked
exec "dbus-update-activation-environment --systemd DISPLAY MOZ_DBUS_REMOTE; systemctl --user start sway-session.target"

include /etc/sway/config.d/*
